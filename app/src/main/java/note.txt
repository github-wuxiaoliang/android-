面向对象6大原则：
单一职责原则：一个类只负责单一的业务逻辑，单独的功能
开闭原则：对扩展开放，对修改关闭，主要依赖于抽象
里氏替换原则：凡是父类的引用出现的地方，肯定能用对应的子类替换掉，依赖继承和抽象。建立抽象，通过抽象建立规范，
            运行时替换掉抽象，保证扩展性，灵活性。
依赖倒置原则：高层模块不应该依赖于低层模块，两则都应该依赖于抽象，
            抽象不应该依赖于细节，细节应该依赖于抽象。一个类中不应该持有具体的实现类，而是持有抽象，具体的实现类
            应该通过方法的方式注入进本类中。

            模块间的依赖通过抽象发生，实现类之间不发生直接的依赖关系，其依赖关系是通过接口或抽象类产生的。

接口隔离原则：客户端不应该依赖他不需要的接口，类之间的依赖应该建立在最小的依赖上面，客户只知道他们感兴趣的方法。
迪米特原则（最少知识原则）：一个对象应该对其他对象有最少的了解，一个类对自己需要耦合或调用的类知道的最少，
                        只与直接的朋友通信。